package com.tinkoff.trening;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Scanner;

/**
 * У Кати насыщенный день на работе. Ей надо передать n разных договоров коллегам.
 * Все встречи происходят на разных этажах, а между этажами можно перемещаться только
 * по лестничным пролетам — считается, что это улучшает физическую форму сотрудников.
 * Прохождение каждого пролета занимает ровно 1 минуту.
 * Сейчас Катя на парковочном этаже, планирует свой маршрут. Коллег можно посетить
 * в любом порядке, но один из них покинет офис через t минут. С парковочного этажа
 * лестницы нет — только лифт, на котором можно подняться на любой этаж.
 * В итоге план Кати следующий:
 * 1. Подняться на лифте на произвольный этаж. Считается, что лифт поднимается на любой этаж за 0 минут.
 * 2. Передать всем коллегам договоры, перемещаясь между этажами по лестнице.
 * Считается, что договоры на этаже передаются мгновенно.
 * 3. В первые t минут передать договор тому коллеге, который планирует уйти.
 * 4. Пройти минимальное количество лестничных пролетов.
 * Помогите Кате выполнить все пункты ее плана.
 * Формат входных данных:
 * В первой строке вводятся целые положительные числа n и t (2?n,t?100) — количество сотрудников и время,
 * когда один из сотрудников покинет офис (в минутах). В следующей строке n чисел — номера этажей,
 * на которых находятся сотрудники. Все числа различны и по абсолютной величине не превосходят 100.
 * Номера этажей даны в порядке возрастания. В следующей строке записан номер сотрудника, который уйдет через t минут.
 * Формат выходных данных:
 * Выведите одно число — минимально возможное число лестничных пролетов, которое понадобится пройти Кате.
 * Замечание:
 * В первом примере времени достаточно, чтобы Катя поднялась по этажам по порядку.
 * Во втором примере Кате понадобится подняться к уходящему сотруднику,
 * а потом пройти всех остальных — например, в порядке {1,2,3,4,6}
 * Примеры данных:
 * Пример 1
 * Ввод:
 * 5  5
 * 1  4  9  16  25
 * 2
 * Вывод:
 * 24
 * Пример 2
 * Ввод:
 * 6  4
 * 1  2  3  6  8  25
 * 5
 * Вывод:
 * 31
 *
 * ----------- ОК -----------
 *
 */

public class task03 {
    public static void main(String[] args) throws FileNotFoundException {



//        Scanner scanner = new Scanner(System.in);
        Scanner scanner = new Scanner(new FileInputStream("C:\\input2.txt"));

        int n = scanner.nextInt();
        int t = scanner.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < arr.length; i++) {
            arr[i] = scanner.nextInt();
        }
        int a = scanner.nextInt();
        scanner.close();


        System.out.println(n + " " + t);
        for (int i : arr) {
            System.out.print(i + " ");
        }
        System.out.println();
        System.out.println(a);
        System.out.println();


        if(n < 3 || a == 1 || a == n){
            System.out.println(arr[arr.length - 1] - arr[0]);
        } else {
            int bottom = 0;
            int top = 0;

            for (int i = 1; i < arr.length; i++) {
                int i2 = arr[i] - arr[i - 1];
                if (i < a){
                    bottom += i2;
                } else {
                    top += i2;
                }
            }

            if (bottom <= t || top <= t){
                System.out.println(bottom + top);
            } else {
                System.out.println(Math.min(bottom, top) * 2 + Math.max(bottom, top));
            }
        }
    }
}
